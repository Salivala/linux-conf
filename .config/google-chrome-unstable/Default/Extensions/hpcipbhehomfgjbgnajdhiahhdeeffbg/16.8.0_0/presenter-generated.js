!function(e,t){for(var i in t)e[i]=t[i]}(window,function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:s})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=5e3;class r{constructor(e){this.presenter=e}onNetworkStatus(e){const t=this.presenter;"ONLINE"==e?(t.onNetworkReconnect(),t.setForceSendEntireImage(),console.log("Back online")):"OFFLINE"==e?(t.onNetworkDisconnect(),console.log("Offline. Reconnecting...")):"STOPPED"==e?(console.log("SDK initiated stop"),t.stopScreenleap(!0,!0,"LOST_CONNECTION")):0==e.indexOf("SLOW")?(console.log("Slow connection to DATA server: "+e),t.onNetworkSlow()):"NORMAL"==e&&(console.log("Connection speed recovered"),t.onNetworkRecovered())}onSessionSummary(e){const t=this.presenter;t.maxViewerWidth=e.display.maxWidth,t.maxViewerHeight=e.display.maxHeight,t.trigger("change:numViewers",{numViewers:e.viewer.active}),t.numActiveViewers=e.viewer.active,t.maxViewers<e.viewer.active&&(t.maxViewers=e.viewer.active)}onSessionStatus(e){const t=this.presenter;switch(e[0]){case"PAUSE":t.sharingState!==sharingStates.PAUSED&&t.togglePause();break;case"RESUME":t.sharingState===sharingStates.PAUSED&&t.togglePause();break;case"END":t.stopScreenleap(!1,!1,e[1])}}onPresenterSwap(e){const t=this.presenter,i=e[0],r=e[1];switch(i){case"REQUEST":if(console.log("Received request to become presenter: "+r),t.requestToBePresenterResponseTimestamp&&(new Date).getTime()-t.requestToBePresenterResponseTimestamp<s)return;t.showViewerRequestToBePresenter(r);break;case"CANCEL":t.cancelScreenSwap();break;case"MOVE":t.isWaitingToPresenterSwap&&(console.log("Received move channel, becoming viewer."),t.becomeViewer())}}onClipboard(e){const t=this.presenter,i=e.split("|");switch(i[0]){case"LINK":copyToClipboard(t.screenShareInfo.viewerUrl);break;case"SHARE_CODE":copyToClipboard(t.screenShareInfo.screenShareCode);break;case"INSTRUCTIONS":var s="View the screen share: "+t.screenShareInfo.viewerUrl+"\n"+t.getSharingInstructions(i[1]);copyToClipboard(s)}}onDailyLimit(e){const t=this.presenter;"grace"==e?(t.dailyTimeLimitDialogShownTimestamp||(t.dailyTimeLimitDialogShownTimestamp=(new Date).getTime(),t.showDailyTimeLimitApproachingDialog()),t.dailyTimeLimitKillTime||(t.dailyTimeLimitKillTime=(new Date).getTime()+60*t.screenShareInfo.graceMinutes*1e3),t.updateStatusClosingIn(Math.abs(parseInt(t.dailyTimeLimitKillTime-(new Date).getTime(),10)))):"freebie"==e?(t.dailyTimeLimitDialogShownTimestamp||(t.dailyTimeLimitDialogShownTimestamp=(new Date).getTime(),t.showDailyTimeLimitFreebieDialog()),t.showDailyTimeLimitFreebieDialog()):"exceededGrace"==e?(t.dailyTimeLimitDialogShownTimestamp||(t.dailyTimeLimitDialogShownTimestamp=(new Date).getTime(),t.showDailyTimeLimitExceededDialog()),t.dailyTimeLimitKillTime||(t.dailyTimeLimitKillTime=(new Date).getTime()+60*t.screenShareInfo.graceMinutes*1e3),t.updateStatusClosingIn(Math.abs(parseInt(t.dailyTimeLimitKillTime-(new Date).getTime(),10)))):"exceededKill"==e&&t.stopScreenleap(!0,!0,"EXCEEDED_TIME","Daily time limit reached")}onFrameRequest(e){this.presenter.setViewerRequestedFullFrame()}onMessage(e){}onPeerConn(e){}}class n{constructor(e){this._size=e,this._images=[],this._index=0;for(let t=0;t<e;t++)this.addImageToPool(t)}addImageToPool(e){const t=new window.Image;t.id=e,this._images.push(t)}acquire(){for(;;){const e=this._images[this._index];if(!e.onload)return this.incrementIndex(),e;if(console.error("image "+this._index+" from object pool is still being used"),this._indexOfFirstFailedAcquire){if(this._indexOfFirstFailedAcquire==this._index)return this.increasePoolSize(),this._indexOfFirstFailedAcquire=null,this._index=this._size-1,console.error("increased size of object pool to "+this._size+" because all images being used"),this._images[this._index]}else this._indexOfFirstFailedAcquire=this._index,this.incrementIndex()}return new window.Image}incrementIndex(){this._index=(this._index+1)%this._size}release(e){e.onload=null,e.onerror=null}increasePoolSize(){this.addImageToPool(this._size),this._size++}}let a=new n(4);function o(e,t){const i=t.width,s=t.height,r=e.getContext("2d").getImageData(0,0,i,s),n=t.getContext("2d").getImageData(0,0,i,s),a=function(e,t,i,s){const r=h;let n=0,a=0,o=0,l=i,u=s,g=0,d=0,S=g;e:for(n=0;n<s;n++)for(a=0;a<i;a++){if(c(e,t,o)){u=n,l=a;break e}o++}const p=u==s;if(!p){var m=i*s;o=m-1;e:for(n=s-1;n>=u;n--)for(a=i-1;a>=0;a--){if(c(e,t,o)){d=n,S=a-1;break e}o--}if(0!=l)for(n=u;n<=d;n++)for(a=0;a<=l;a++)c(e,t,o=n*i+a)&&(l=a);else l=0;if(S!=i-1)for(n=d;n>=u;n--)for(a=i-1;a>=S;a--)c(e,t,o=n*i+a)&&a>g&&(g=a);else g=i-1}const f=g-l+1,w=d-u+1;if(p)return null;if(f*w<r)return null;return{x:l,y:u,width:f,height:w}}(r.data,n.data,i,s);return a?[a]:[]}const h=40;function c(e,t,i){const s=4*i;return e[s]!=t[s]||e[s+1]!=t[s+1]||e[s+2]!=t[s+2]||e[s+3]!=t[s+3]}const l=40,u=999;class g{constructor(){this.isBroadcast=!1,this.screenShareCode="",this.handle=null,this.participantId=null,this.viewerUrl=null,this.audioConferencingInfo=null,this.webServerBaseUrl=null,this.origin=null,this.standardHeaders=new d,this.isApiShare=!1,this.isSupportShare=!1,this.hidePauseButton=!1,this.hideStopButton=!1,this.hasFreebie=!1,this.graceMinutes=10,this.maxMinutesPerDay=null,this.dailyShareTimeDescription=null,this.alwaysSendLogFile=!1,this.recordScreenShare=!1,this.screenShareAccountType=null,this.accountTypeDescription=null,this.upgradeActionDescription=null,this.baseImageQuality=l,this.defaultMaxImageQuality=u,this.authToken=null,this.hosts=null,this.enableWebRTC=!1}setPresenterParams(e){this.screenShareCode=e.screenShareCode,this.dateCreated=e.dateCreated,this.handle=e.handle,this.participantId=e.participantId,this.viewerUrl=e.viewerUrl,this.audioConferencingInfo=e.audioConferencingInfo,this.alwaysSendLogFile=e.alwaysSendLogFile,this.recordScreenShare=e.recordScreenShare,this.screenShareAccountType=e.screenShareAccountType,this.accountTypeDescription=e.accountTypeDescription,this.upgradeActionDescription=e.upgradeActionDescription,this.dailyShareTimeDescription=e.dailyShareTimeDescription,this.authToken=e.presenterToken,this.hosts=e.hosts,this.enableWebRTC=e.enableWebRTC,void 0!==e.origin&&(this.origin=e.origin),void 0!==e.hidePauseButton&&(this.hidePauseButton=e.hidePauseButton),void 0!==e.hideStopButton&&(this.hideStopButton=e.hideStopButton),void 0!==e.hasFreebie&&(this.hasFreebie=e.hasFreebie),void 0!==e.gracePeriodMinutes&&(this.graceMinutes=e.gracePeriodMinutes),void 0!==e.maxMinutesPerDay&&(this.maxMinutesPerDay=e.maxMinutesPerDay),e.customMaxImageQuality&&(this.customMaxImageQuality=100*parseFloat(e.customMaxImageQuality)),this.standardHeaders.ParticipantId=this.participantId,this.isApiShare="API"==this.origin,this.isApiShare&&(this.standardHeaders.AccountId=e.accountId),this.isSupportShare="SUPPORT"==this.origin}toString(){let e="screenShareCode = "+this.screenShareCode+"\n";return null!=this.participantId&&(e+="participantId = "+this.participantId+"\n"),null!=this.viewerUrl&&(e+="viewerUrl = "+this.viewerUrl+"\n"),null!=this.origin&&(e+="origin = "+this.origin+"\n"),e}}class d{}const S=1e3,p=5*S,m=10*S,f=15*S,w=60*S,I=200,T=10,v=20,C=9e5,y=36e5,b=36e5,F=m,P="ms",R="sc",A="se",D="SLS:",x=1310720,E=3686400,O="image/jpeg",M="image/png",N=192e4,_=1600,U=1200,k={x:0,y:0,screenX:0,screenY:0,devicePixelRatio:0},V={action:"",headers:null,contentType:null,params:null,data:null},B={PresenterAppType:null,PresenterAppVersion:null,CurrentTime:null,timeZoneOffset:null,Authorization:null,ParticipantId:null},L={x:0,y:0,width:0,height:0,quality:0};var q=!1;q&&chrome.browserAction.disable();var Q=!1,W=!1,H=!1,G=!1,j=!0;t.Presenter=class{constructor(){this.SHARE_ENTIRE_SCREEN="shareEntireScreen",this.RESTRICT_TO_FIRST_WINDOW="restrictToFirstWindow",this.RESTRICT_TO_TAB="restrictToTab",this.BROADCAST_ACCESS_CODE="accessCode",this.version=chrome.runtime.getManifest()&&void 0!==chrome.runtime.getManifest().version?chrome.runtime.getManifest().version:"16.8.0",this.webServerHostname="www.screenleap.com",this.webServerBaseUrl="http://"+this.webServerHostname,this.secureWebServerBaseUrl=this.webServerBaseUrl.replace("http://","https://").replace(":9000",":9443"),this.isProduction=0===this.webServerHostname.indexOf("www.")||0===this.webServerHostname.indexOf("api."),this.userAgent=window.navigator.userAgent,this.webpageId=0,this.sharer=null,this.imageReductionScalingFactor=1,this.screenShareInfo=new g,this.periodicSendStarted=!1,this.isOpeningNewTab=!1,this.disableShareInstructions=!1,this.hideViewerUrl=!1,this.instructionsTab=null,this.instructionsTabUrl=null,this.restrictToWindowId=null,this.activeWindowId=null,this.lastActiveTab=null,this.lockToTab=null,this.scalesForWindowIds={},this.maxImageQualityForCurrentViewport=0,this.currentImageQuality=0,this.prevDiffRegions=[],this.sharingState=sharingStates.NONE,this.startTime=0,this.pauseTime=0,this.checkStartSharingTimer=null,this.checkStopSharingTimer=null,this.userMediaStream=null,this.lastSendFrameLoop=null,this.intervalCounter=0,this.mousePositionIntervalCounter=0,this.frameCount=0,this.lastScreenShareFrameSent=0,this.userFrameDelayMS=0,this.isForceFullFrame=!1,this.isRequestedFullFrame=!1,this.isSendingEntireImage=!1,this.captureAndSendTime=null,this.lastFrameOrPingSent=0,this.prevUrl=null,this.hasReachedMaxQualityForFullFrame=!1,this.requestToBePresenterResponseTimestamp=0,this.requestToBePresenterParticipantId=null,this.isShowingDialog=!1,this.longPauseDialogShown=!1,this.disconnectDialogShown=!1,this.noViewersDialogShown=!1,this.isWaitingToPresenterSwap=!1,this.dialogOpenTime=0,this.timeTrackingManager=null,this.dailyTimeLimitKillTime=0,this.isCheckingExists=!1,this.maxViewerWidth=0,this.maxViewerHeight=0,this.lastMousePositionSent=0,this.prevMousePosition=Object.assign({},k),this.mousePosition=Object.assign({},k),this.renderViewerMouseCursor=!1,this.options={},this.options[this.RESTRICT_TO_FIRST_WINDOW]=!this.isProduction,this.listeners=new Map,this.chatIsVisible=!1,this.chatIsOpen=!1,this.chatConversation="",this.unableToConnectTime=null,this.offlineNotification=null,this.isNetworkSlow=!1,this.maxViewers=0,this.numActiveViewers=0;try{chrome.storage.local.get("mandatoryUpdateContinuation",e=>{chrome.runtime.lastError?console.error("error while getting data for continuation of screen share after mandatory update: "+chrome.runtime.lastError):void 0!==e.mandatoryUpdateContinuation&&void 0!==e.mandatoryUpdateContinuation.presenterParams&&this._doPresenterConnect(e.mandatoryUpdateContinuation.userInfo,e.mandatoryUpdateContinuation.screenShareData,e.mandatoryUpdateContinuation.presenterParams,()=>{}),chrome.storage.local.remove("mandatoryUpdateContinuation")})}catch(e){const t="failed to initialize presenter:";e instanceof ReferenceError?console.error(t,e.stack):console.error(t,e)}}getCanvas(e){const t=document.getElementById(e);if(!(t instanceof HTMLCanvasElement))throw e+" must be a <canvas>";return t}getLockToTab(){return this.lockToTab}_setLockTab(e){e?(console.log("locking tab to tab with id "+e.id+", and url "+e.url),this.options[this.RESTRICT_TO_TAB]=!0,dispatch.trigger(e,"showLockedTab")):(console.log("clearing lock tab"),this.options[this.RESTRICT_TO_TAB]=!1,dispatch.trigger(this.lockToTab,"clearLockedTab")),this.lockToTab=e}getOption(e){return this.options[e]}setOption(e,t){console.log("Setting option "+e+" to "+t),e==this.RESTRICT_TO_TAB?t?performOnActiveTab(e=>{this._setLockTab(e[0])},()=>{}):this._setLockTab(null):this.options[e]=t}on(e,t,i){let s=this.listeners.get(e);s||(s=[],this.listeners.set(e,s)),s.push({callback:t,context:i})}trigger(e,t){const i=this.listeners.get(e);if(i)for(let e=0;e<i.length;e++)i[e].callback.call(i[e].context||this,t)}getWebServerBaseUrl(){return this.webServerBaseUrl}getSecureWebServerBaseUrl(){return this.secureWebServerBaseUrl}getIsApiShare(){return null!==this.screenShareInfo&&"API"==this.screenShareInfo.origin}startScreenShareWithData(e){this.doStartScreenShare(e.origin,e,null,()=>{},()=>{})}startScreenShareForUser(e,t,i){i?i.userId?i.token?this.doStartScreenShare(e,t,i,()=>{},()=>{}):console.warn("Tried to start a screen share with no token."):console.warn("Tried to start a screen share with no userId."):console.warn("Tried to start a screen share without credentials.")}startBroadcastForUser(e,t,i,s,r){i?i.userId?i.token?this.doStartBroadcast(e,t,i,s,r):console.warn("Tried to start a broadcast with no token."):console.warn("Tried to start a broadcast with no userId."):console.warn("Tried to start a broadcast without credentials.")}_presenterConnect(e,t,i,s){this._checkForMandatoryUpdate(()=>{this._performMandatoryUpdate(e,t,i)},()=>{this._doPresenterConnect(e,t,i,s)})}_checkForMandatoryUpdate(e,t){const i=window.navigator.userAgent.match(/Chrom(?:e|ium)\/([0-9]+\.[0-9]+)/)[1],s=chrome.runtime.id;let r=new XMLHttpRequest;r.open("POST",this.getWebServerBaseUrl()+"/extension/get-latest-version?chromeVersion="+i+"&extensionId="+s),r.timeout=3e3,r.ontimeout=(()=>{t()}),r.onreadystatechange=(()=>{if(r){if(4==r.readyState){if(200==r.status){const i=r.responseText,s=i.split("."),n=100*parseInt(s[0])+10*parseInt(s[1])+parseInt(s[2]);if(chrome.runtime.getManifest()&&void 0!==chrome.runtime.getManifest().version){const s=chrome.runtime.getManifest().version,r=s.split(".");n-(100*parseInt(r[0])+10*parseInt(r[1])+parseInt(r[2]))>=10?(console.log("Mandatory extension required: current version = "+s+", latest version = "+i),e()):(console.log("No mandatory extension required: current version = "+s+", latest version = "+i),t())}else t()}else console.log("Unable to get latest extension version"),t();r=null}}else console.log("_checkForMandatoryUpdate xhr already null")}),r.send()}_performMandatoryUpdate(e,t,i){chrome.runtime.onUpdateAvailable.addListener(e=>{console.log("Starting new version of extension"),chrome.runtime.reload()}),chrome.storage.local.set({mandatoryUpdateContinuation:{userInfo:e,screenShareData:t,presenterParams:i}},()=>{chrome.runtime.requestUpdateCheck(e=>{"update_available"==e&&console.log("Mandatory update found")})})}_doPresenterConnect(e,t,i,s){G&&console.log("Starting presenter connect for share code "+this.screenShareInfo.screenShareCode+(this.screenShareInfo.recordScreenShare?" with recording enabled":"")),i.hosts?i.hosts.length<3&&console.error("not all required hosts available: unable to start screen share"):console.error("no hosts specified: unable to start screen share"),this.screenShareInfo.setPresenterParams(i),this.startSDK(),this.setForceFullFrame(),this.disableShareInstructions=!1,t&&void 0!==t.disableShareInstructions?this.disableShareInstructions=t.disableShareInstructions:"IN_BROWSER"==this.screenShareInfo.origin||"SCREENLEAP"==this.screenShareInfo.origin||t&&void 0!==t.origin&&"PRESENTER_SWAP"==t.origin||(this.disableShareInstructions=!0),this.hideViewerUrl=t&&void 0!==t.hideViewerUrl?t.hideViewerUrl:this.disableShareInstructions,this.screenShareInfo.isSupportShare&&(this.renderViewerMouseCursor=!0),this.sharingState=sharingStates.CONNECTING,this.trigger("change:sharingState",{action:sharingActions.START,sharingState:this.sharingState,viewerUrl:this.getViewerUrl()});const r=Object.assign({},B,{PresenterAppType:"IN_BROWSER",PresenterAppVersion:this.version,CurrentTime:(new Date).getTime()});t&&this.getIsApiShare()&&(r.AccountId=t.accountId);const n=new Date;"function"==typeof n.getTimezoneOffset&&(r.timeZoneOffset=60*n.getTimezoneOffset()*1e3*-1);const a={presenterAppType:"IN_BROWSER",presenterAppVersion:this.version,timeZoneOffset:""+-6e4*(new Date).getTimezoneOffset(),version:1,accountId:""};t&&this.getIsApiShare()&&(a.accountId=t.accountId);const o={action:sharingActions.START,headers:r,contentType:"text/plain",data:"",params:null};this.sharer&&(o.contentType="application/json",o.data=JSON.stringify(a)),this.updateScreenShareInfoOnAppServer(o,t=>{G&&console.log("Presenter connect succeeded"),this.sendWebPageMessage(R,this.screenShareInfo),this.configureCaptureEntireScreenIfNecessary(e);try{const e=JSON.parse(t);this.startChannel(e.hosts)}catch(e){this.processResponseData(t)}s&&s()},e=>{this.startScreenShareUnsuccessful(e,"",!1)},(new Date).getTime(),null)}startSDK(){const e=new r(this),t=this.secureWebServerBaseUrl.slice(8);null!=this.screenShareInfo.participantId?null!=this.screenShareInfo.authToken?null!=this.screenShareInfo.hosts?(this.sharer=new V2.Sharer(e,t),this.sharer.init(this.screenShareInfo.participantId,this.screenShareInfo.screenShareCode,this.screenShareInfo.authToken,this.screenShareInfo.hosts,this.screenShareInfo.enableWebRTC)):console.log("startSDK: Missing hosts"):console.log("startSDK: Missing authToken."):console.log("startSDK: Missing participantId.")}startChannel(e){this.sharer?this.sharer.start(e):console.log("startChannel: sharer is null")}getSecureAppServerBaseUrl(){if(!this.sharer)return console.log("getSecureAppServerBaseUrl: sharer is null"),"";const e=this.sharer.getCtrlHost();return""==e?"":"https://"+e}sendMessageToAppServer(e,t){this.sharer?this.sharer.pubMeta(e,t).catch(()=>{}):console.log("sendMessageToAppServer: sharer is null")}useFreebie(){const e=this.getSecureAppServerBaseUrl()+"/presenter/"+this.screenShareInfo.screenShareCode+"/freebie";this.postRequest({url:e},null,null)}sendFrame(e,t,i){if(!this.isSharing()||null==this.sharer)return;const s=t.imagesToSend,r=t.diffRects,n=t.viewWindow,a=t.newFrameCount;if(this.intervalCounter>=e)return void console.log("intervalCounter at "+this.intervalCounter+", which is greater than this intervalCounter ("+e+"). not sending frame");if(!s||0===s.length)return console.warn("dataUrlList is not specified: returning"),void this.setNextIntervalReady(e,"L");let o=[];i&&(Array.prototype.push.apply(s,i.imagesToSend),o=i.diffRects),this.sharer.sendFrame(n,r,s,o).then(t=>{if(null!=t)switch(t.status){case 200:try{1==r.length&&r[0]==n&&(this.currentImageQuality==this.maxImageQualityForCurrentViewport?this.hasReachedMaxQualityForFullFrame=!0:this.hasReachedMaxQualityForFullFrame=!1),this.sendFrameSuccessful(a,!0,e,"O")}catch(t){console.error("Exception while calling sendFrame: ",t),this.setNextIntervalReady(e,"F")}break;case 404:this.checkShareExists();break;default:t.text().then(e=>{console.error("sendFrame error "+t.status+": "+e)}),this.setNextIntervalReady(e,"F")}else console.log("sendFrame sent null response.")}).catch(t=>{console.log("sendFrame exception:",t),this.setNextIntervalReady(e,"G")})}getRequest(e,t,i){e.type="GET",this.doRequest(e,t,i)}postRequest(e,t,i){e.type||(e.type="POST"),this.doRequest(e,t,i)}doRequest(e,t,i){e.headers||(e.headers={}),null!=this.screenShareInfo.authToken&&null!=this.screenShareInfo.participantId&&(e.headers.Authorization=D+this.screenShareInfo.authToken,e.headers.ParticipantId=this.screenShareInfo.participantId,screenleapUtils.ajax(e,e=>{t&&t(e)},(e,t)=>{i&&i(e,t)}))}_clearCheckShareStarted(){this.checkStartSharingTimer&&(clearTimeout(this.checkStartSharingTimer),this.checkStartSharingTimer=null)}_initCheckShareStarted(){this.checkStartSharingTimer||(this._clearCheckShareStopped(),this.checkStartSharingTimer=setTimeout(()=>{if(this.sharingState==sharingStates.STARTING){const t="Unable to start the screen share after 1 minute.";this.startScreenShareUnsuccessful({status:500,responseText:t},"",!1),this.stopScreenleap(!1,!1,"LOST_CONNECTION",t);var e=getPopup();e?e.resetExtension("Attempting to start for more than 60 seconds"):resetExtension()}else this._clearCheckShareStarted()},w))}_tryStartScreenShare(e,t,i,s,r,n,a,o,h,c,l){if(this.prevCanvas=this.getCanvas("screenleapCanvas1"),this.nextCanvas=this.getCanvas("screenleapCanvas2"),o||(o=0),0===o&&this._initCheckShareStarted(),G){let e="";e+=0===o?"Starting":"Retrying (attempt #"+o+")",e+=" screen share for ",i?e+=i:r&&(e+=r),n&&(e+=", userId = "+n.userId),console.log(e)}a||(a=i||r?"GET":"POST"),screenleapUtils.ajax({url:e,headers:t,type:a,timeout:h},e=>{const t=JSON.parse(e);this._presenterConnect(n,s,t,()=>{this._clearCheckShareStarted(),c&&c(this.screenShareInfo)})},(u,g)=>{var d=u?u.status:null;console.log("Failed to start screen share: url = "+e+", isTimeout = "+g+", xhr.status = "+d+", message = "+u.responseText),o<5&&404!=d&&410!=d?(g&&(h+=3e3),setTimeout(()=>{this._tryStartScreenShare(e,t,i,s,r,n,a,++o,h,c,l)},h)):(console.error("Start screen share unsuccessful"),this.startScreenShareUnsuccessful(u,"",null!=l),l&&l(u))})}doStartScreenShare(e,t,i,s,r){if(this.isSharing())return;e||(e="IN_BROWSER");let n=null;this.sharingState==sharingStates.NONE&&(this.resetProperties(),this.sharingState=sharingStates.STARTING,t&&(this.screenShareInfo.setPresenterParams(t),n=t.screenShareCode));let a,o=this.getSecureWebServerBaseUrl();if("PRESENTER_SWAP"==e)a="POST",o="https://"+t.ctrlHost+"/viewer/params/"+t.screenShareCode+"/"+t.viewerId;else if(n){if(void 0!==t.presenterParams&&t.presenterParams.startsWith("{"))return void this._presenterConnect(i,t,JSON.parse(t.presenterParams),()=>{this._clearCheckShareStarted(),s&&s(this.screenShareInfo)});"SUPPORT"==t.origin?o+="/customer-support/start/"+n:(a="POST",o+="/v2/screen-shares/"+n+"/browser-extension-params"+(t.accountId?"?accountId="+t.accountId:""))}else o+="/screen-shares?origin="+e+"&extensionShareType="+(this.getOption("shareEntireScreen")?"USER_SELECT":"BROWSER");var h={};i&&(h={userId:i.userId?i.userId:null,token:i.token?i.token:null,emailAddress:i.emailAddress?i.emailAddress:null}),this._tryStartScreenShare(o,h,n,t,null,i,a,0,F,s,r)}doStartBroadcast(e,t,i,s,r){if(this.isSharing())return;e||(e="IN_BROWSER");let n=null,a=null;this.sharingState==sharingStates.NONE&&(this.resetProperties(),this.sharingState=sharingStates.STARTING,t&&(this.screenShareInfo.setPresenterParams(t),n=t.screenShareCode,a=t.handle)),this.screenShareInfo.isBroadcast=!0;let o,h=this.getSecureWebServerBaseUrl();if("PRESENTER_SWAP"==e)o="POST",h="https://"+t.ctrlHost+"/viewer/params/"+t.screenShareCode+"/"+t.viewerId;else if(n){if(void 0!==t.presenterParams&&t.presenterParams.startsWith("{"))return void this._presenterConnect(i,t,JSON.parse(t.presenterParams),()=>{this._clearCheckShareStarted(),s&&s(this.screenShareInfo)});"SUPPORT"==t.origin&&a?h+="/customer-support/start/"+a:(o="POST",h+="/v2/screen-shares/"+n+"/browser-extension-params"+(t.accountId?"?accountId="+t.accountId:""))}else{h+="/browser-broadcasts?origin="+e;let t=this.getOption(this.BROADCAST_ACCESS_CODE);null!=t&&(h+="&accessCode="+t)}let c={};i&&(c={userId:i.userId?i.userId:null,token:i.token?i.token:null,emailAddress:i.emailAddress?i.emailAddress:null}),this._tryStartScreenShare(h,c,n,t,a,i,o,0,F,s,r)}getUserMediaSuccess(e){this.userMediaStream=e,this.userMediaStream.oninactive=(()=>{this.stopScreenleap(!0,!0,"USER_ACTION"),this.userMediaStream=null});const t=this.getVideo();t?(t.src=(window.URL||window.webkitURL).createObjectURL(e),t.play(),"GMAIL"!=this.screenShareInfo.origin&&"INTEGRATION"!=this.screenShareInfo.origin||dispatch.triggerOnAllTabs("startIntegrationScreenShareSuccessful",this.screenShareInfo),this.startScreenShareSuccessful()):console.log("Missing screenleapVideo <video> element.")}getUserMediaFail(e){console.error("failed to get a user media stream. disabling full screen capture: "+e),this.stopScreenleap(!1,!1,"USER_ACTION")}configureCaptureEntireScreenIfNecessary(e){this.isCaptureEntireScreen()&&null==this.userMediaStream?chrome.desktopCapture.chooseDesktopMedia("GMAIL"==this.screenShareInfo.origin||"INTEGRATION"==this.screenShareInfo.origin?["screen"]:["screen","window"],null,e=>{e?navigator.mediaDevices.getUserMedia({audio:!1,video:{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:e,maxWidth:window.screen.width,maxHeight:window.screen.height},optional:[]}}).then(e=>{this.getUserMediaSuccess(e)}).catch(e=>{this.getUserMediaFail(e)}):"GMAIL"==this.screenShareInfo.origin||"INTEGRATION"==this.screenShareInfo.origin?(dispatch.triggerOnAllTabs("startIntegrationScreenShareUnsuccessful",{status:401,event:"captureDesktop"}),this.stopScreenleap(!1,!1,"USER_ACTION")):(console.log("Denied get permission to capture entire screen. Screen share not started."),this.stopScreenleap(!1,!1,"USER_ACTION"))}):this.startScreenShareSuccessful(e)}startScreenShareSuccessful(e){!q||this.screenShareInfo.hidePauseButton&&this.screenShareInfo.hideStopButton||chrome.browserAction.enable(),this.startTime=(new Date).getTime(),dispatch.triggerOnAllTabs("clearChat"),this.lockToTab?dispatch.trigger(this.lockToTab,"startScreenShareUpdateUI",{captureEntireScreen:this.isCaptureEntireScreen()}):dispatch.triggerOnActiveTab("startScreenShareUpdateUI",{captureEntireScreen:this.isCaptureEntireScreen()});let t=this.getWebServerBaseUrl();if(t+="/share?screenShareCode="+this.screenShareInfo.screenShareCode,this.screenShareInfo.participantId){if(t+="&participantId="+this.screenShareInfo.participantId,t+="&hostname="+this.getHostname(),e&&(t+="&authenticatedUserId="+e.userId+"&userAuthToken="+e.token),t+="&isExtension=true&startedFromApp=true&",t+="shareEntireScreen="+this.isCaptureEntireScreen().toString(),this.startTimeTracking(),this.screenShareInfo.isSupportShare||this.screenShareInfo.isApiShare)dispatch.triggerOnAllTabs("startScreenShareSuccessful",{screenShareCode:this.screenShareInfo.screenShareCode,participantId:this.screenShareInfo.participantId,hostname:this.getHostname(),shareUrl:t});else if(!this.disableShareInstructions&&!this.getIsApiShare())return this.isOpeningNewTab=!0,openNewTabOrUpdateCurrentTab(t,e=>{this.isOpeningNewTab&&e.url==t&&(this.isOpeningNewTab=!1,this.instructionsTab=e,dispatch.trigger(e,"startScreenShareUpdateUI",{captureEntireScreen:this.isCaptureEntireScreen()})),this.startPeriodicSend()}),void(this.instructionsTabUrl=t);this.startPeriodicSend()}else console.log("startScreenShareSuccessful: missing participantId")}startScreenShareUnsuccessful(e,t,i){const s=e?e.status:403,r=e?e.responseText:t;H&&console.warn("unable to share screen: status = "+s+", response text = "+r),this.sharingState=sharingStates.NONE,this._clearCheckShareStarted(),this.trigger("change:sharingState",{action:sharingActions.STOP,sharingState:this.sharingState}),401==s&&this.trigger("unauthorized",{}),this.screenShareInfo.isSupportShare||this.screenShareInfo.isApiShare?dispatch.triggerOnAllTabs("startScreenShareUnsuccessful",{screenShareCode:this.getScreenShareCode(),status:s,responseText:r}):i||dispatch.triggerOnActiveTab("showShareFailed",{status:s,responseText:r})}getScreenShareCode(){return this.screenShareInfo.screenShareCode}getHandle(){return this.screenShareInfo.handle||""}getViewerUrl(){return this.screenShareInfo.viewerUrl||""}updateScreenShareInfoOnAppServer(e,t,i,s,r){s||(s=(new Date).getTime());const n=this.getSecureAppServerBaseUrl()+"/presenter/"+this.screenShareInfo.screenShareCode+"/"+e.action,a=Object.assign({},this.screenShareInfo.standardHeaders,e.headers);G&&console.log("Update screen share info on app server action = "+e.action),this.postRequest({url:n,contentType:e.contentType,params:e.params,data:e.data,headers:a,timeout:m},i=>{switch(e.action){case"start":case"resume":this.sharingState=sharingStates.SHARING;break;case"pause":this.sharingState=sharingStates.PAUSED;break;case"stop":q&&chrome.browserAction.disable();break;default:console.warn("UNKNOWN SHARING ACTION = "+e.action)}t&&t(i),e.action!=sharingActions.STOP&&e.action!=sharingActions.PAUSE&&e.action!=sharingActions.RESUME&&this.trigger("change:sharingState",{action:e.action,sharingState:this.sharingState,viewerUrl:this.getViewerUrl()})},n=>{const a=(new Date).getTime();if("start"==e.action&&a<s+w){if(console.error("encountered exception during presenter connect"+(n?": xhr status = "+n.status:"")),n&&404==n.status)return void i(n);r||(r=(new Date).getTime()),setTimeout(()=>{this.updateScreenShareInfoOnAppServer(e,t,i,s,r)},1e3)}else i&&i(n)})}isSharing(){return this.sharingState!=sharingStates.NONE&&this.sharingState!=sharingStates.STOPPING&&null!=this.screenShareInfo.screenShareCode}startPeriodicSend(){this.isSharing()&&!this.periodicSendStarted&&(this.periodicSendStarted=!0,this.captureAndSendFrame(this.intervalCounter+1),this.sendMousePosition(this.mousePositionIntervalCounter+1))}getScale(){return this.activeWindowId&&this.scalesForWindowIds[this.activeWindowId]?this.scalesForWindowIds[this.activeWindowId]:1}isCaptureEntireScreen(){return 1==this.getOption(this.SHARE_ENTIRE_SCREEN)}isCapturingEntireScreen(){return this.isCaptureEntireScreen()&&null!=this.userMediaStream}captureAndSendFrame(e){if(H){const e=((new Date).getTime()-this.startTime)/1e3,t=this.frameCount/e;console.log("["+this.frameCount+"] "+e+"s, "+t+" fps, frame delay "+this.getFrameDelay())}if(this.isSharing())try{if(this.sharingState==sharingStates.PAUSED||this.isShowingDialog){if(this.isForceFullFrame){const t=this.isCapturingEntireScreen()?this.getVideoCanvas():this.prevCanvas;if(!t)return void(this.isCapturingEntireScreen()?console.log("Missing video canvas HTML element"):console.log("Missing prev canvas HTML element"));let i={x:0,y:0,width:t.width,height:t.height};const s=this._scaleCanvasIfNecessary(t,i);if(!s)return void console.log("Missing screenleapScalingCanvas <canvas> element");this.clearPreviousDiffs(),i={x:0,y:0,width:s.width,height:s.height};const r=new K;r.imagesToSend=[this.encodeCanvas(s,0)],r.diffRects=[i],r.viewWindow=i,r.newFrameCount=this.frameCount,this.sendFrame(e,r,null),this.getAndResetForceFullFrame()}else setTimeout(()=>{this.setNextIntervalReady(e,"J")},S);return}const t=(new Date).getTime()-this.lastFrameOrPingSent;if(!this.screenShareInfo.recordScreenShare&&0===this.getNumActiveViewers()&&t<w)return H&&console.log("not running doCaptureAndSendFrame: viewers = "+this.getNumActiveViewers()+", force send full frame = "+this.isForceFullFrame.toString()+", time since last frame = "+t),void this.setNextIntervalReady(e,"X");this.doCaptureAndSendFrame(e)}catch(t){console.error("Exception while calling captureAndSendFrame: "+t),this.setNextIntervalReady(e,"C")}else console.log("not sharing so returning.")}doCaptureAndSendFrame(e){performOnActiveTab(t=>{sendFrame(e,t)},()=>{this.setNextIntervalReady(e,"F")})}getVideo(){if(!this.video){const e=document.getElementById("screenleapVideo");if(!(e instanceof HTMLVideoElement))return console.log("screenleapVideo must be a <video> element"),null;this.video=e}return this.video}getVideoCanvas(){if(!this.videoCanvas){const e=document.getElementById("screenleapVideoCanvas");if(!(e instanceof HTMLCanvasElement))return console.log("screenleapVideoCanvas must be a <canvas>"),null;this.videoCanvas=e}return this.videoCanvas}getScalingCanvas(){if(!this.scalingCanvas){const e=document.getElementById("screenleapScalingCanvas");if(!(e instanceof HTMLCanvasElement))return console.log("screenleapScalingCanvas must be a <canvas>"),null;this.scalingCanvas=e}return this.scalingCanvas}setForceFullFrame(){this.isForceFullFrame=!0}getAndResetForceFullFrame(){return!!this.isForceFullFrame&&(this.isForceFullFrame=!1,!0)}setViewerRequestedFullFrame(){this.isRequestedFullFrame=!0}getAndResetViewerRequestedFullFrame(){return!!this.isRequestedFullFrame&&(this.isRequestedFullFrame=!1,!0)}setImageQualityBounds(e,t){e>t?console.log("setImageQualityBounds: min should be <= max"):(this.screenShareInfo.baseImageQuality=e,this.screenShareInfo.customMaxImageQuality=t,this.screenShareInfo.defaultMaxImageQuality=t,this.maxImageQualityForCurrentViewport=t,this.setForceFullFrame())}clearMaxImageQualityForCurrentViewport(){this.maxImageQualityForCurrentViewport=0}getMaxImageQualityForCurrentViewport(e){return this.maxImageQualityForCurrentViewport||(this.screenShareInfo.customMaxImageQuality?this.maxImageQualityForCurrentViewport=this.screenShareInfo.customMaxImageQuality:e>=E?this.maxImageQualityForCurrentViewport=70:e>=x?this.maxImageQualityForCurrentViewport=80:this.screenShareInfo.defaultMaxImageQuality?this.maxImageQualityForCurrentViewport=this.screenShareInfo.defaultMaxImageQuality:this.maxImageQualityForCurrentViewport=u,H&&console.log("max image quality for current viewport = "+this.maxImageQualityForCurrentViewport)),this.maxImageQualityForCurrentViewport}_setImageQuality(e,t){if(e){const e=this.getMaxImageQualityForCurrentViewport(t.width*t.height);return this._getCurrentImageQuality()<e&&(this._setCurrentImageQuality(e),!0)}return this.resetCurrentImageQuality(),!0}_getCurrentImageQuality(){return 0===this.currentImageQuality&&(this.currentImageQuality=this.screenShareInfo.baseImageQuality?this.screenShareInfo.baseImageQuality:l),this.currentImageQuality}_setCurrentImageQuality(e){e!=this.currentImageQuality&&(this.currentImageQuality=e)}resetCurrentImageQuality(){this.currentImageQuality=this.screenShareInfo.baseImageQuality?this.screenShareInfo.baseImageQuality:l}_calculateImageReductionScalingFactor(e,t,i){var s=0===t?_:Math.min(t,_),r=0===i?U:Math.min(i,U),n=this._calculateMaxScaledDimension(e,s,r);return n?e.width<=s&&e.height<=r?1:n.width/e.width:1}_calculateMaxScaledDimension(e,t,i){if(!e)return null;let s;s=1!=this.getScale()?{x:e.x/this.getScale(),y:e.y/this.getScale(),width:e.width/this.getScale(),height:e.height/this.getScale()}:e;var r=0,n=0;if(t)s.width<=t&&s.height<=i?(r=s.width,n=s.height):s.width<=s.height&&t>=i?(r=s.width*i/s.height,n=i):s.width>=s.height&&t<=i?(r=t,n=s.height*t/s.width):s.width>=s.height&&t>=i?s.width/s.height>t/i?(r=t,n=s.height*t/s.width):(r=s.width*i/s.height,n=i):s.width<=s.height&&t<=i?s.height/s.width>i/t?(r=s.width*i/s.height,n=i):(r=t,n=s.height*t/s.width):(r=s.width,n=s.height);else if(s.height<=i)r=s.width,n=s.height;else{var a=i/s.height;r=s.width*a,n=s.height*a}return r&&n?{width:Math.round(r),height:Math.round(n)}:null}async compareAndSendFrameIfDifferent(e,t,i){if(!e)return void this.setNextIntervalReady(i,"noDataUrl");this.prevCanvas.getContext("2d").clearRect(0,0,this.prevCanvas.width,this.prevCanvas.height),this.switchCanvases(),await async function(e,t){return new Promise((i,s)=>{const r=a.acquire();r.onload=(()=>{a.release(r),e.width=r.width,e.height=r.height;const t=e.getContext("2d");t.drawImage(r,0,0),i()}),r.onerror=(()=>{a.release(r),s("failed to load img with data url")}),r.src=t})}(this.nextCanvas,e);const s=this.prevCanvas.width,r=this.prevCanvas.height,n=this.nextCanvas.width,h=this.nextCanvas.height,c={x:0,y:0,width:n,height:h},l=t!==this.prevUrl&&!this.isCapturingEntireScreen()||s!=n||r!=h;l&&this.clearMaxImageQualityForCurrentViewport();const u=(new Date).getTime(),g=this.getAndResetForceFullFrame(),d=this.getAndResetViewerRequestedFullFrame(),S=this.lastScreenShareFrameSent<u-w;let p,m=0===this.frameCount||l||g||d||S;if(!g&&(d||!m)){const e=function(e){const t=[];for(let i of e)t.push(Object.assign({},L,i));return t}(o(this.prevCanvas,this.nextCanvas));p=this.diffFrame(c,e)}try{if(m){const e=this.fullFrame(c);this.sendFrame(i,e,p)}else p?this.sendFrame(i,p,null):this.setNextIntervalReady(i,"10l");this.prevUrl=t}catch(e){console.error("Exception while calling creating or sending frames: "+e),this.setNextIntervalReady(i,"I")}}switchCanvases(){let e=this.prevCanvas;this.prevCanvas=this.nextCanvas,this.nextCanvas=e}fullFrame(e){this.hasReachedMaxQualityForFullFrame=!1,0===this.frameCount&&console.log("sending first frame"),this._setImageQuality(!1,e),this.clearPreviousDiffs();let t=this._scaleCanvasIfNecessary(this.nextCanvas,e);t||(console.log("fullFrame: Missing screenleapScalingCanvas <canvas> element. Not scaling."),t=this.nextCanvas);const i={x:0,y:0,width:t.width,height:t.height},s=new K;return s.imagesToSend=[this.encodeCanvas(t,0)],s.diffRects=[i],s.viewWindow=i,s.newFrameCount=this.frameCount+1,s}diffFrame(e,t){const i=0===t.length,s=this._setImageQuality(i,e),r=i&&s,n=r?this.frameCount:this.frameCount+1;let a=Number.MAX_SAFE_INTEGER;r&&0!=this.prevDiffRegions.length?(Array.prototype.push.apply(t,this.prevDiffRegions),this.clearPreviousDiffs(),this.resetCurrentImageQuality()):(a=t.length,this.addPreviousDiffs(t));const o=0===t.length;if(o&&(this.hasReachedMaxQualityForFullFrame||!s))return H&&console.log("not sending image: identical = ",o,", max quality = ",this.hasReachedMaxQualityForFullFrame,", quality changed = ",s),null;let h=null;if(o){const i=this._scaleCanvasIfNecessary(this.nextCanvas,e);if(!i)return void console.log("sendDiffFrames: Missing screenleapScalingCanvas");e={x:0,y:0,width:i.width,height:i.height},t=[Object.assign({},L,e)],h=[this.encodeCanvas(i,0)],this.clearPreviousDiffs(),this.hasReachedMaxQualityForFullFrame=r}else{const i=t;if(this._shouldReduceImageSize(e)){t=[];for(var c=0;c<i.length;c++){const e=this._scaleRectangle(i[c]);t.push(Object.assign({},L,e))}e=this._scaleRectangle(e)}const s=this.getScalingCanvas();if(!s)return void console.log("sendDiffFrames: Scaling canvas is null");if(h=this.getSubImages(this.nextCanvas,s,i,t),!r){this.prevDiffRegions=[];for(const e of t.slice(0,a))e.quality=this.screenShareInfo.defaultMaxImageQuality,this.prevDiffRegions.push(e)}}const l=new K;return l.imagesToSend=h,l.diffRects=function(e){const t=[];for(let i of e)t.push({x:i.x,y:i.y,width:i.width,height:i.height});return t}(t),l.viewWindow=e,l.newFrameCount=n,l}encodeCanvas(e,t){t||(t=this._getCurrentImageQuality());let i=O;return t>100&&(i=M),e.toDataURL(i,t/100)}getSubImages(e,t,i,s){const r=[];for(var n=0;n<s.length;n++){const a=i[n],o=s[n];t.width=o.width,t.height=o.height,t.getContext("2d").drawImage(e,a.x,a.y,a.width,a.height,0,0,o.width,o.height);let h=this._getCurrentImageQuality();o.quality>0&&(h=o.quality),r.push(this.encodeCanvas(t,h))}return r}clearPreviousDiffs(){this.prevDiffRegions=[]}addPreviousDiffs(e){for(const t of this.prevDiffRegions)this.rectanglesContain(e,t)||e.push(t)}rectanglesContain(e,t){if(!e)return!1;for(let i of e)if(i.x<=t.x&&t.x+t.width<=i.x+i.width&&i.y<=t.y&&t.y+t.height<=i.y+i.height)return!0;return!1}sendFrameSuccessful(e,t,i,s){this.frameCount=e,t&&(this.lastFrameOrPingSent=(new Date).getTime()),this.lastScreenShareFrameSent=(new Date).getTime(),this.isSendingEntireImage&&(this.isSendingEntireImage=!1),this.setNextIntervalReady(i,s)}_scaleCanvasIfNecessary(e,t){return this._shouldReduceImageSize(t)?this._scaleCanvas(e,t,this.imageReductionScalingFactor):e}_allowImageReduction(){return!this.screenShareInfo.recordScreenShare}_shouldReduceImageSize(e){if(!this._allowImageReduction())return!1;var t=e.width*e.height>N,i=this._getMaxViewerBrowserWindowsDimension(),s=this._calculateImageReductionScalingFactor(e,i.width,i.height);this._setImageReductionScalingFactor(s);var r=i&&i.width>0&&i.height>0;return 1!=this.getScale()||1!=s||t||r}_scaleCanvas(e,t,i){const s=Math.round(t.width*i),r=Math.round(t.height*i),n=this.getScalingCanvas();return n?(n.width=s,n.height=r,n.getContext("2d").drawImage(e,0,0,t.width,t.height,0,0,s,r),n):(console.log("Missing screenleapScalingCanvas <canvas> element"),null)}_scaleRectangle(e){return{x:Math.round(e.x*this.imageReductionScalingFactor),y:Math.round(e.y*this.imageReductionScalingFactor),width:Math.round(e.width*this.imageReductionScalingFactor),height:Math.round(e.height*this.imageReductionScalingFactor)}}onNetworkDisconnect(){this.trigger("change:sharingState",{sharingState:sharingStates.RECONNECTING}),dispatch.triggerOnActiveTab("updateSharingState",{sharingState:sharingStates.RECONNECTING,captureEntireScreen:this.isCaptureEntireScreen()}),this.offlineNotification=new Notification("Not connected. Reconnecting...")}onNetworkReconnect(){this.offlineNotification&&this.offlineNotification.close(),this.trigger("change:sharingState",{sharingState:sharingStates.SHARING}),dispatch.triggerOnActiveTab("updateSharingState",{sharingState:sharingStates.SHARING,captureEntireScreen:this.isCaptureEntireScreen()})}onNetworkSlow(){this.isNetworkSlow=!0,this.setImageQualityBounds(20,40),this.trigger("net:slow",{})}onNetworkRecovered(){this.isNetworkSlow=!1,this.setImageQualityBounds(l,u),this.trigger("net:recover",{})}setNextIntervalReady(e,t,i){if(this.isSharing())if(this.lastSendFrameLoop=(new Date).getTime(),this.intervalCounter+1==e){this.intervalCounter=e,null==i&&(i=this.getFrameDelay()),0==i&&0==this.getNumActiveViewers()&&(i=this.screenShareInfo.recordScreenShare?500:100);const t=e+1;setTimeout(()=>{this.captureAndSendFrame(t)},i)}else"G"!=t&&"X"!=t&&console.error("INTERVAL MISMATCH: previous interval = "+this.intervalCounter+", current interval = "+e+", sequence = "+t)}getFrameDelay(){if(0!==this.userFrameDelayMS)return this.userFrameDelayMS;const e=this.screenShareInfo.screenShareAccountType;return"ANONYMOUS"==e||"FREE"==e?I:T}setFrameDelayMS(e){this.userFrameDelayMS=e}setNextMousePositionIntervalReady(e,t){this.isSharing()&&(this.mousePositionIntervalCounter+1==e?(this.mousePositionIntervalCounter=e,W&&t&&console.log("MOUSE POSITION NEXT INTERVAL READY: "+this.mousePositionIntervalCounter,t),setTimeout(()=>{this.sendMousePosition(this.mousePositionIntervalCounter+1)},v)):console.log("MOUSE POSITION INTERVAL MISMATCH: previous interval = "+this.mousePositionIntervalCounter+", current interval = "+e+", sequence = "+t))}sendMousePosition(e){if(!this.isSharing())return;if(this.sharingState==sharingStates.PAUSED)return void this.setNextMousePositionIntervalReady(e,"B");const t=Object.assign({},k);t.x=this.mousePosition.x,t.y=this.mousePosition.y,this.isCapturingEntireScreen()&&(t.x+=this.mousePosition.screenX,t.y+=this.mousePosition.screenY),1==this.imageReductionScalingFactor&&1==this.getScale()||(t.x=Math.round(t.x*this.imageReductionScalingFactor*this.getScale()),t.y=Math.round(t.y*this.imageReductionScalingFactor*this.getScale()));const i=this.lastMousePositionSent<(new Date).getTime()-f;this.isCapturingEntireScreen()||t.x==this.prevMousePosition.x&&t.y==this.prevMousePosition.y&&!i?this.setNextMousePositionIntervalReady(e,"C"):(this.sharer&&this.sharer.sendPointer("mousemove",t.x,t.y),this.lastMousePositionSent=(new Date).getTime(),this.setNextMousePositionIntervalReady(e,"A"),this.prevMousePosition=Object.assign({},k),this.prevMousePosition.x=t.x,this.prevMousePosition.y=t.y)}startTimeTracking(){this.screenShareInfo.maxMinutesPerDay&&(this.timeTrackingManager=setInterval(()=>{this.trackTime()},5e3))}_getMinutesUntilKill(){const e=this.dailyTimeLimitKillTime-(new Date).getTime();return parseInt(e/6e4,10)}trackTime(){const e=(new Date).getTime();if(this.dailyTimeLimitKillTime)if(e>this.dailyTimeLimitKillTime)this.stopScreenleap(!0,!0,"EXCEEDED_TIME","Daily time limit reached");else{let e=this._getMinutesUntilKill();e<1&&(e=1),this.updateStatusClosingIn(e)}this.isShowingDialog?this._shouldStopScreenleap()&&this.stopScreenleap(!0,!0,"TIMEOUT"):!this.noViewersDialogShown&&0==this.getMaxViewers()&&0!=this.startTime&&e-this.startTime>C?this._showNoViewersDialog():!this.longPauseDialogShown&&0!=this.pauseTime&&e-this.pauseTime>y?this._showLongPauseDialog():!this.disconnectDialogShown&&this.shareHasStarted()&&0==this.getNumActiveViewers()&&this._showDisconnectDialog()}_shouldStopScreenleap(){return 0==this.getNumActiveViewers()&&this.dialogOpenTime>0&&(new Date).getTime()-this.dialogOpenTime>b}updateStatusClosingIn(e){this.trigger("updateStatusLabel",{label:"Closing in "+e+" minute"+(1==e?"":"s")})}stopTimeTracking(){this.timeTrackingManager&&(clearInterval(this.timeTrackingManager),this.timeTrackingManager=null)}getMaxViewers(){return this.maxViewers}shareHasStarted(){return this.getMaxViewers()>0}_getMaxViewerBrowserWindowsDimension(){return{width:this.maxViewerWidth,height:this.maxViewerHeight}}_showScreenSwapDialog(e){j&&console.log("Showing swap screen window"),this.requestToBePresenterResponseTimestamp=0,this.requestToBePresenterParticipantId=e,dispatch.triggerOnActiveTab("showScreenSwapDialog"),this.dialogOpenTime=(new Date).getTime(),this.isShowingDialog=!0}cancelScreenSwap(){this.requestToBePresenterParticipantId=null,dispatch.triggerOnActiveTab("hideDialog"),this.setDialogIsHidden()}showViewerRequestToBePresenter(e){e!=this.screenShareInfo.participantId&&this._showScreenSwapDialog(e)}_showNoViewersDialog(){dispatch.triggerOnActiveTab("showNoViewersDialog"),this.dialogOpenTime=(new Date).getTime(),this.isShowingDialog=!0,this.noViewersDialogShown=!0}_showLongPauseDialog(){dispatch.triggerOnActiveTab("showLongPauseDialog"),this.dialogOpenTime=(new Date).getTime(),this.isShowingDialog=!0,this.longPauseDialogShown=!0}_showDisconnectDialog(){dispatch.triggerOnActiveTab("showDisconnectDialog"),this.dialogOpenTime=(new Date).getTime(),this.isShowingDialog=!0,this.disconnectDialogShown=!0}showDailyTimeLimitFreebieDialog(){const e="You have reached the daily time limit for "+(this.screenShareInfo.accountTypeDescription||"")+" ("+(this.screenShareInfo.dailyShareTimeDescription||"")+"). Since this is your first time, you may continue. Next time you will need to "+(this.screenShareInfo.upgradeActionDescription||"")+" for longer screen shares.";dispatch.triggerOnActiveTab("showDailyTimeLimitFreebieDialog",{message:e}),this.isShowingDialog=!0,this.dialogOpenTime=(new Date).getTime()}showDailyTimeLimitApproachingDialog(){const e="You are approaching the daily time limit for "+(this.screenShareInfo.accountTypeDescription||"")+" ("+(this.screenShareInfo.dailyShareTimeDescription||"")+"). This share will end in "+this.screenShareInfo.graceMinutes+" minutes.";dispatch.triggerOnActiveTab("showDailyTimeLimitDialog",{message:e}),this.isShowingDialog=!0,this.dialogOpenTime=(new Date).getTime()}showDailyTimeLimitExceededDialog(){const e="You have reached the daily time limit for "+(this.screenShareInfo.accountTypeDescription||"")+" ("+(this.screenShareInfo.dailyShareTimeDescription||"")+"). This share will end in "+this.screenShareInfo.graceMinutes+" minutes.";dispatch.triggerOnActiveTab("showDailyTimeLimitDialog",{message:e}),this.isShowingDialog=!0,this.dialogOpenTime=(new Date).getTime()}setDialogIsHidden(){this.isShowingDialog=!1,this.dialogOpenTime=0}getHostname(){return this.sharer?this.sharer.getCtrlHost():(console.log("getHostname: this.sharer is null."),"")}parseMessageList(e){if(0==e.length)return[];if("string"!=typeof e||","===e[e.length-1])return console.log("parseMessageList: Unexpected message: "+e),[];const t=e.split("|");let i=null;return 2==t.length&&(i=t[1]),[{id:this.webpageId++,src:"webpage",hdr:t[0],data:i}]}parseMessage(e){let t=e.data;""===t&&(t=null);let i=null;return"string"==typeof t&&(i=t.split("|")),{messageType:e.hdr,data:t,parts:i}}processResponseData(e){if(Q&&console.log("received: "+e),!this.isSharing())return;if(H&&!e)return void console.log("no response data to process");this.screenShareInfo;const t=this.parseMessageList(e);for(let e=0;e<t.length;e++){const i=t[e],s=this.parseMessage(i);if(null===s)continue;const r=s.messageType,n=s.data;if(s.parts,"rq"==r){if(j&&n&&console.log("Received request to become presenter: "+n),this.requestToBePresenterResponseTimestamp&&(new Date).getTime()-this.requestToBePresenterResponseTimestamp<p)return;n&&this.showViewerRequestToBePresenter(n)}else if("cr"==r)n&&n==this.requestToBePresenterParticipantId&&(j&&console.log("Viewer has cancelled their request to become presenter: "+n),dispatch.triggerOnAllTabs("hideScreenSwapDialog"),this.denyScreenSwap());else if("fu"==r)this.setViewerRequestedFullFrame();else if("ea"==r)this.stopScreenleap(!0,!0,"API_CALL");else if("ec"==r)this.stopScreenleap(!0,!0,"API_CALL");else if("cl"==r)this.screenShareInfo.viewerUrl&&copyToClipboard(this.screenShareInfo.viewerUrl);else if("cs"==r)this.screenShareInfo.screenShareCode&&copyToClipboard(this.screenShareInfo.screenShareCode);else if("cc"==r&&this.screenShareInfo.viewerUrl){const e="View the screen share: "+this.screenShareInfo.viewerUrl+"\n"+this.getSharingInstructions(n);copyToClipboard(e)}}}getSharingInstructions(e){return this.screenShareInfo.audioConferencingInfo?e?this.screenShareInfo.audioConferencingInfo.replace("$CONFERENCE_ID$",e):this.screenShareInfo.audioConferencingInfo:""}updateChatProperties(e,t,i){this.chatIsVisible=e,this.chatIsOpen=t,this.chatConversation=i}sendChatMessage(e){e&&(e=(e=encodeURIComponent(e)).replace(/~/g,"%257E"),this.sendMessageToAppServer(P,e))}getNumActiveViewers(){return this.numActiveViewers}togglePause(){this.sharingState==sharingStates.PAUSED?(this.updateStateToResumed(),this.updateScreenShareInfoOnAppServer(Object.assign({},V,{action:sharingActions.RESUME}),null,()=>{this.updateStateToPaused()},null,null)):(this.updateStateToPaused(),this.setForceFullFrame(),this.updateScreenShareInfoOnAppServer(Object.assign({},V,{action:sharingActions.PAUSE}),null,()=>{this.updateStateToResumed()},null,null))}updateStateToPaused(){this.pauseTime=(new Date).getTime(),this.sharingState=sharingStates.PAUSED,this.trigger("change:sharingState",{action:"pause",sharingState:sharingStates.PAUSED,viewerUrl:this.getViewerUrl()}),dispatch.triggerOnActiveTab("pauseScreenShare",{captureEntireScreen:this.isCaptureEntireScreen()})}updateStateToResumed(){this.pauseTime=0,this.sharingState=sharingStates.SHARING,this.trigger("change:sharingState",{action:"resume",sharingState:sharingStates.SHARING,viewerUrl:this.getViewerUrl()}),dispatch.triggerOnActiveTab("unpauseScreenShare",{captureEntireScreen:this.isCaptureEntireScreen()})}sendWebPageMessage(e,t){t||(t={}),t.type=e,dispatch.triggerOnAllTabs("sendWebPageMessage",t)}startRecording(){var e=this.getSecureAppServerBaseUrl()+"/presenter/"+this.screenShareInfo.screenShareCode+"/rec/start";this.postRequest({url:e},null,null)}stopRecording(){const e=this.getSecureAppServerBaseUrl()+"/presenter/"+this.screenShareInfo.screenShareCode+"/rec/stop";this.postRequest({url:e},null,null)}_clearCheckShareStopped(){this.checkStopSharingTimer&&(clearInterval(this.checkStopSharingTimer),this.checkStopSharingTimer=null)}checkShareExists(){if(this.isCheckingExists)return;this.isCheckingExists=!0;const e=this.getSecureAppServerBaseUrl()+"/presenter/"+this.screenShareInfo.screenShareCode+"/check";this.getRequest({url:e},e=>{this.isCheckingExists=!1},(e,t)=>{null==e||410!=e.status&&404!=e.status||this.stopScreenleap(!1,!0,"GONE"),this.isCheckingExists=!1})}stopScreenleap(e,t,i,s=""){if(!this.isSharing())return;console.log("stopping screen share: end state = "+i+(s?", reason = "+s:"")),this.checkStopSharingTimer||(this._clearCheckShareStarted(),this.checkStopSharingTimer=setInterval(()=>{if(this.sharingState==sharingStates.STOPPING){const e=getPopup();null!=e?e.resetExtension("Attempting to stop for more than 60 seconds"):resetExtension()}else this._clearCheckShareStopped()},w));const r=this.getVideo();r&&(r.src=""),this.userMediaStream&&this.userMediaStream.getVideoTracks().length>0&&this.userMediaStream.getVideoTracks()[0].stop(),this.stopTimeTracking(),this.isSharing()||this.sharingState==sharingStates.STARTING?(G&&console.log("Stopping screenleap: notify server = "+e.toString()+", notify web page = "+t.toString()+", endState = "+i+(s?", reason="+s:"")+", current share state is "+this.sharingState),this.sharingState=sharingStates.STOPPING,t?(!this.disableShareInstructions&&this.instructionsTab&&(activateInstructionsTab(this.instructionsTab),this.sendWebPageMessage(A)),dispatch.triggerOnAllTabs("stopScreenShare",{message:i,screenShareCode:this.screenShareInfo.screenShareCode})):"PRESENTER_SWAP"==i&&dispatch.triggerOnAllTabs("deactivateWindow"),e?(console.log("notifying server"),this.updateScreenShareInfoOnAppServer(Object.assign({},V,{action:sharingActions.STOP,params:{endState:i}}),()=>{this.disconnect(i)},e=>{console.log("Stop sharing failed"+(e?": status = "+e.status:"")),this.disconnect(i)},null,null)):(console.log("not notifying server"),this.disconnect(i))):this.resetProperties(),a=new n(4),console.log("final interval = "+this.intervalCounter)}disconnect(e){this.sharingState=sharingStates.NONE,this.trigger("change:sharingState",{action:sharingActions.STOP,sharingState:this.sharingState}),this.sharer&&this.sharer.finalize(),this.resetProperties()}resetProperties(){console.log("resetting presenter properties"),this.imageReductionScalingFactor=1,this.screenShareInfo=new g,this.maxViewers=0,this.numActiveViewers=0,this.periodicSendStarted=!1,this.isOpeningNewTab=!1,this.disableShareInstructions=!1,this.hideViewerUrl=!1,this.instructionsTab=null,this.instructionsTabUrl=null,this.restrictToWindowId=null,this.activeWindowId=null,this.lastActiveTab=null,this.lockToTab=null,this.scalesForWindowIds={},this.currentImageQuality=0,this.maxImageQualityForCurrentViewport=0,this.sharingState=sharingStates.NONE,this.startTime=0,this.pauseTime=0,this.userMediaStream=null,this.lastSendFrameLoop=null,this.intervalCounter=0,this.mousePositionIntervalCounter=0,this.frameCount=0,this.lastScreenShareFrameSent=0,this.isForceFullFrame=!1,this.isRequestedFullFrame=!1,this.isSendingEntireImage=!1,this.captureAndSendTime=null,this.lastFrameOrPingSent=0,this.prevUrl=null,this.hasReachedMaxQualityForFullFrame=!1,this.isShowingDialog=!1,this.longPauseDialogShown=!1,this.disconnectDialogShown=!1,this.noViewersDialogShown=!1,this.isWaitingToPresenterSwap=!1,this.dialogOpenTime=0,this.requestToBePresenterResponseTimestamp=0,this.requestToBePresenterParticipantId=null,this.timeTrackingManager=null,this.dailyTimeLimitKillTime=0,this.lastMousePositionSent=0,this.prevMousePosition=Object.assign({},k),this.mousePosition=Object.assign({},k),this.renderViewerMouseCursor=!1,this.chatIsVisible=!1,this.chatIsOpen=!1,this.chatConversation="",this.isNetworkSlow=!1,this._clearCheckShareStarted(),this._clearCheckShareStopped(),this.setDialogIsHidden()}getDisableShareInstructions(){return this.disableShareInstructions}getHideViewerUrl(){return this.hideViewerUrl}confirmScreenSwap(){this.requestToBePresenterResponseTimestamp=(new Date).getTime();const e=this.requestToBePresenterParticipantId,t=this.screenShareInfo.screenShareCode;if(e&&t){j&&console.log("granted viewer id "+e+" permission to be presenter"),dispatch.triggerOnAllTabs("disableUnload");const i=this.getSecureAppServerBaseUrl()+"/presenter/"+t+"/swap/"+e+"/allow";this.postRequest({url:i},()=>{this.isWaitingToPresenterSwap=!0},(e,t)=>{})}}becomeViewer(){let e=this.getViewerUrl();const t=this.requestToBePresenterParticipantId;t?(this.screenShareInfo.isBroadcast?e+="?participantId="+t:e+="/"+t,openNewTabOrUpdateCurrentTab(e,null),this.stopScreenleap(!1,!1,"PRESENTER_SWAP","user action")):console.log("becomeViewer: Missing requestToBePresenterParticipantId")}denyScreenSwap(){const e=this.requestToBePresenterParticipantId,t=this.screenShareInfo.screenShareCode;if(e&&t){this.requestToBePresenterResponseTimestamp=(new Date).getTime(),j&&console.log("denied viewer id "+e+" permission to be presenter");const i=this.getSecureAppServerBaseUrl()+"/presenter/"+t+"/swap/"+e+"/deny";this.postRequest({url:i},null,null),this.requestToBePresenterParticipantId=null}}_setImageReductionScalingFactor(e){e>1&&(console.log("Attempting to set image reduction factor to "+e+" is not allowed. Setting to 1.0"),e=1),this.imageReductionScalingFactor!=e&&(this.imageReductionScalingFactor=e,this.setForceFullFrame())}};class K{}}]));