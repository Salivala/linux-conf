function Point(e,t){this.x=e,this.y=t}function ScreenleapImgCompareUtils(){var e=function(e,t){return null==e?-1:null==t?1:e.x<t.x?-1:e.x>t.x?1:e.getMaxX()<t.getMaxX()?-1:e.getMaxX()>t.getMaxX()?1:0};this.mergeRectangles=function(e,r){if(e.length<2)return e;for(var n=0,i=e,a=i.length;n!=a;)n=i.length,a=(i=t(i,r)).length;return i};var t=function(t,r){var n=screenleapUtils.getTotalArea(t);t.sort(e);var i=[];e:for(var a=0;a<t.length;a++){for(var l=t[a],g=0;g<i.length;g++){var o=i[g];if(l.getIsHorizontalOrientation()&&o.getIsVerticalOrientation()){if(l.width>300&&o.width>300)continue}else if(l.width&&o.getIsHorizontalOrientation()&&l.height>300&&o.height>300)continue;var s=30,h=30;if(l.getIsHorizontallyAligned(o,20)?s*=2:l.getIsVerticallyAligned(o,20)&&(h*=2),l.overlapsOrAdjacent(o,h,s)){o.mergeWithSelf(l);continue e}}i.push(l)}for(var f=0;f<i.length;f++)for(var c,v=i[f];c<i.length;c++){var u=i[c];if(f!=c&&v.overlaps(u)){u.mergeWithSelf(v),i.splice(f,1),f--;break}}var p=screenleapUtils.getTotalArea(i)/n;if(r>0&&p>.1)for(a=0;a<i.length;a++)(l=i[a]).getArea()<r&&(i.splice(a,1),a--);return i}}var screenleapImgCompareUtils=new ScreenleapImgCompareUtils;